// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  companyId String?
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Company   Company? @relation(fields: [companyId], references: [id])
}

model Product {
  id          String     @id @default(uuid())
  companyId   String?
  company     Company?   @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  name        String
  price       Decimal
  sku         String?
  stock       Decimal?
  description String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  photos      Photo[]
  categories  Category[]
}

model Category {
  id        String    @id @default(uuid())
  companyId String?
  company   Company?  @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  name      String
  key       String
  type      String
  size      Int
  productId String
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
}

model Company {
  id         String     @id @default(uuid())
  name       String?
  subName    String?
  email      String?
  phone      String?
  users      User[]
  products   Product[]
  categories Category[]
  logos      Logo[]
  subdomain  String?    @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Logo {
  id        String   @id @default(uuid())
  url       String
  name      String
  key       String
  type      String
  size      Int
  companyId String
  company   Company  @relation(fields: [companyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime @default(now())
}
